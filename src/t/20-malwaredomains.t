use strict;
use warnings;
use 5.011;

use Test::More;
use Data::Dumper;

BEGIN { 
    use_ok('CIF');
    use_ok('CIF::Smrt');
    use_ok('CIF::Rule');
};

use CIF qw/parse_rules/;

## DOMAINS

my $rule = 'rules/default/malwaredomains.yml';
$rule = parse_rules($rule, 'domains');

ok($rule);

$rule->{'defaults'}->{'remote'} = 'file:./testdata/malwaredomins.com/domains.zip';

my $ret = CIF::Smrt->new({
    rule            => $rule,
    tmp             => '/tmp',
    ignore_journal  => 1,
    not_before      => '2010-01-01',
})->process();

ok($#{$ret} >= 0,'testing for results...');
ok(@{$ret}[-1]->{'observable'} eq 'zoid.in');

## URL SHORTENERS

my $rule = 'rules/default/malwaredomains.yml';
$rule = parse_rules($rule, 'url_shorteners');

ok($rule);

$rule->{'defaults'}->{'remote'} = 'file:./testdata/malwaredomins.com/url_shorteners.zip';

$ret = CIF::Smrt->new({
    rule            => $rule,
    tmp             => '/tmp',
    ignore_journal  => 1,
    not_before      => '2010-01-01',
})->process();

ok($#{$ret} >= 0,'testing for results...');
ok(@{$ret}[-1]->{'observable'} eq 'url123.info', 'testing for url123.info');

## REGISTRARS

my $rule = 'rules/default/malwaredomains.yml';
$rule = parse_rules($rule,'registrars');

ok($rule);

$rule->{'defaults'}->{'remote'} = 'file:./testdata/malwaredomins.com/bulk_registrars.zip';

$ret = CIF::Smrt->new({
    rule            => $rule,
    tmp             => '/tmp',
    ignore_journal  => 1,
    not_before      => '2010-01-01',
})->process();

ok($#{$ret} >= 0,'testing for results...');
ok(@{$ret}[-1]->{'observable'} eq 'zma.me', 'testing for zma.me');

done_testing();
