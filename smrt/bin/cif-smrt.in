#!/usr/bin/env perl

use strict;
use warnings;
use feature 'say';

# fix lib paths, some may be relative
BEGIN { # BEGIN RT CMD BOILERPLATE
    require File::Spec;
    require Cwd;
    my @libs = ('@CIF_PATH@/lib');
    my $bin_path;

    for my $lib (@libs) {
        unless ( File::Spec->file_name_is_absolute($lib) ) {
            $bin_path ||= ( File::Spec->splitpath(Cwd::abs_path(__FILE__)) )[1];
            $lib = File::Spec->catfile( $bin_path, File::Spec->updir, $lib );
        }
        unshift @INC, $lib;
    }

}

use Getopt::Long;
use Config::Simple;
use CIF qw/debug hash_create_random/;
use CIF::Smrt;
use Data::Dumper;

my $help;
my $man;
my $daemon      = 0;
our $debug      = 0;
my $verbosity   = 0;

my $remote      = 'zmq+tcp://localhost:'.CIF::DEFAULT_PORT();
my $token       = hash_create_random();

my $rule       = '';
my $feed        = '';
my $threads     = 1;

my $smrt_config;
my $client_config;

my $config = $ENV{'HOME'}.'/.cif';
if(-e $config){
    $config = Config::Simple->new($config);
    $client_config  = $config->get_block('client');
    $smrt_config    = $config->get_block('smrt');
    
    $token  = $smrt_config->{'token'}   || $client_config->{'token'}    || $token;
    $remote = $smrt_config->{'remote'}  || $client_config->{'remote'}   || $remote;
}

Getopt::Long::Configure("bundling");
GetOptions(
    'help|h'        => \$help, 
    'config|C=s'    => \$config,
    'remote|R=s'    => \$remote,
    'token|T=s'     => \$token,
    'rule|r=s'     => \$rule,
    'feed|f=s'      => \$feed,
    'daemon|D'      => \$daemon,
    'threads|t=i'   => \$threads,
    'debug|d'       => \$debug,
    'verbosity|v'   => \$verbosity,
) or die(usage());

die(usage()) if($help);
die(usage()) unless($rule && $feed);

$debug = $verbosity if($verbosity);

sub usage {
    return <<EOF;

Usage: $0 [OPTION]

 Options:
    -R, --remote=STRING     specify a remote to connect to, default $remote
    -T, --token=STRING      specify a default token/apikey to use, default: $token
    -C, --config=FILE       specify cofiguration file, default: ~/.cif 
    -D, --daemon            run as daemon
    -d, --debug             turn on debugging
    -v, --verbosity         turn up debug verbosity [1-10]
    -h, --help              this message       

 Examples:
    $0 -C /path/to/cif.conf

EOF
}

my $smrt = CIF::Smrt->new({
    client_config => {
        remote          => $remote,
        Token           => $token,
        encoder_pretty  => 1,
    },
});

my ($err,$ret);

$ret = $smrt->process({
    rule    => {
        config  => $rule,
        feed    => $feed,
    },
});

($err,$ret) = $smrt->get_client->submit({
    Observables => $ret,
});
croak($err) if($err);
#$ret = join("\n",map { $_ = 'id: '.$_ } @$ret );
#$ret = "success: \n".$ret;
#say $ret;

exit(0);
